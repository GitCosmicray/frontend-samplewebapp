name: Deploy to AWS ECS

on:
  push:
    branches:
      - main  

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2 

      - name: Scan with Snyk
        id: snyk-scan
        uses: snyk/actions/node@master
        with:
          args: --file=package.json --sarif-file-output=snyk.sarif || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true  

      - name: Convert SARIF to Text using jq
        run: |
          jq -r '.runs[].results[] | "Rule: \(.ruleId) - Severity: \(.level) - Message: \(.message.text)"' snyk.sarif > snyk_report.txt || true

      - name: Upload Snyk Report
        uses: actions/upload-artifact@v4
        with:
          name: snyk-report
          path: snyk_report.txt


      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push image to Amazon ECR
        env:
          ECR_REPOSITORY: react-frontend
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster applicationclusters --service frontend-service --force-new-deployment --desired-count 1 --task-definition frontend-td:2
