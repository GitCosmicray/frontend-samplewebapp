name: Deploy to AWS ECS

on:
  push:
    branches:
      - main  

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2 

      - name: Setup Snyk
        uses: snyk/actions/setup@master

      - name: Snyk Code Scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk auth $SNYK_TOKEN
          snyk test --severity-threshold=high --json > snyk_report.json || true
          
          # Check if vulnerabilities exist, otherwise write "No vulnerabilities found"
          if jq -e '.vulnerabilities | length > 0' snyk_report.json > /dev/null; then
            jq -r '.vulnerabilities[] | "\(.id): \(.title) - \(.severity)"' snyk_report.json > snyk_report.txt
          else
            echo "No vulnerabilities found" > snyk_report.txt
          fi

      - name: Upload Snyk Text Report
        uses: actions/upload-artifact@v4
        with:
          name: snyk-text-report
          path: snyk_report.txt

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push image to Amazon ECR
        env:
          ECR_REPOSITORY: react-frontend
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster applicationclusters --service frontend-service --force-new-deployment --desired-count 1 --task-definition frontend-td:2
